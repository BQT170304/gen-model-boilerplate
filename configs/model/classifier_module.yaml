_target_: src.models.classifier_module.ClassifierModule

use_latent: true
num_timesteps: 1000

optimizer:
  _target_: torch.optim.AdamW
  _partial_: true
  lr: 5e-4
  weight_decay: 1e-5

scheduler:
  _target_: torch.optim.lr_scheduler.CosineAnnealingLR
  _partial_: true
  T_max: 200
  eta_min: 1e-6

# Paths to model weights
encoder_path: ${paths.root_dir}/src/ckpt_s256/vq_vae/encoder.pth 
decoder_path: ${paths.root_dir}/src/ckpt_s256/vq_vae/decoder.pth 
vq_layer_path: ${paths.root_dir}/src/ckpt_s256/vq_vae/vq_layer_1024.pth
classifier_path: ${paths.root_dir}/src/ckpt_s256/classifier/classifier_ldm64_1000step.pth

# VAE configuration
vae:
  _target_: src.models.vae.net.VQVAE

  encoder:
    _target_: src.models.components.up_down.Encoder

    in_channels: 4  # Adjusted to match BRATS2020 dataset
    z_channels: ${model.vae.latent_dims[0]}
    base_channels: 64
    block: Residual
    n_layer_blocks: 1
    drop_rate: 0.1
    channel_multipliers: [1, 2, 4]
    attention: Attention
    n_attention_heads: null
    n_attention_layers: null
    double_z: false

  decoder:
    _target_: src.models.components.up_down.Decoder

    out_channels: ${model.vae.encoder.in_channels}
    z_channels: ${model.vae.latent_dims[0]}
    base_channels: ${model.vae.encoder.base_channels}
    block: ${model.vae.encoder.block}
    n_layer_blocks: ${model.vae.encoder.n_layer_blocks}
    drop_rate: ${model.vae.encoder.drop_rate}
    channel_multipliers: ${model.vae.encoder.channel_multipliers}
    attention: ${model.vae.encoder.attention}
    n_attention_heads: ${model.vae.encoder.n_attention_heads}
    n_attention_layers: ${model.vae.encoder.n_attention_layers}

  latent_dims: [4, 32, 32]  # Adjusted to match the configuration

  vq_layer:
    _target_: src.models.vae.net.VectorQuantizer
    num_embeddings: 512
    embedding_dim: ${model.vae.latent_dims[0]}
    beta: 0.25